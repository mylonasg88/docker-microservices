version: "3.8"

networks:
  dc-microservices:

services:
  dc-php:
    container_name: dc-php
    restart: always
    #    image: richarvey/nginx-php-fpm
    build:
      context: ./dc-php
      dockerfile: Dockerfile
    networks:
      - dc-microservices
    ports:
      - 8081:80
    volumes:
      - ./dc-php:/var/www/dc-php

  dc-node:
    container_name: dc-node
    # image: prorva/dc-node
    build:
      context: ./dc-node
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - dc-node-2
    links:
      - dc-node-2
    networks:
      - dc-microservices

    environment:
      PORT: 8080
      NAME: 'George'
      RACK_ENV: development
      SHOW: 'true'
      VALUE: 4000
    env_file:
      - variables.env
    ports:
      - 8080:80
    volumes:
      - ./dc-node/app:/var/www/dc-node/app

  dc-node-2:
    container_name: dc-node-2
    # image: prorva/dc-node
    build:
      context: ./dc-node
      dockerfile: Dockerfile
    restart: always
    networks:
      - dc-microservices

    environment:
      PORT: 8080
      NAME: 'George'
      RACK_ENV: development
      SHOW: 'true'
      VALUE: 4000
    env_file:
      - variables.env
    ports:
      - 8082:9000
    volumes:
      - ./dc-node-2/app:/var/www/dc-node/app

  db-1:
    container_name: db-1
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql

volumes:
  my-db:
